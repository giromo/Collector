name: Update Configs
permissions: write-all
on:
  push:
    branches:
      - main
  schedule:
    - cron: "*/20 * * * *"
  workflow_dispatch:

jobs:
  update-configs:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'
        cache: true
        cache-dependency-path: Files/go.mod

    - name: Build and run Go aggregator
      run: |
        cd Files
        echo "Building Go application..."
        go mod tidy
        go build -ldflags="-s -w" -o ../aggregator *.go
        cd ..
        echo "Starting config aggregation and sorting..."
        start_time=$(date +%s)
        ./aggregator || { echo "Aggregator failed"; exit 1; }
        end_time=$(date +%s)
        processing_time=$((end_time - start_time))
        echo "Config processing completed successfully in $processing_time seconds!"
        echo "PROCESSING_TIME=$processing_time" >> $GITHUB_ENV

    - name: Verify output files
      run: |
        echo "Verifying generated files..."
        echo "Sub files in root directory:"
        ls -la Sub*.txt 2>/dev/null || echo "No Sub files found"

        echo "\nProtocol-based sorted configs (Splitted-By-Protocol):"
        ls -la Splitted-By-Protocol/ 2>/dev/null || echo "No protocol directory found"

        echo "\nCountry-based sorted configs (Splitted-By-Country):"
        ls -la Splitted-By-Country/ 2>/dev/null || echo "No country directory found"

        echo "\nBase64 directory:"
        ls -la Base64/ 2>/dev/null || echo "No Base64 directory found"

        if [ -d "Splitted-By-Protocol" ]; then
          echo "\nProtocol file statistics:"
          for file in Splitted-By-Protocol/*.txt; do
            if [ -f "$file" ]; then
              count=$(grep -v '^#' "$file" | wc -l)
              size=$(du -h "$file" | cut -f1)
              basename=$(basename "$file")
              echo "  $basename: $count configs ($size)"
            fi
          done
        fi

        if [ -d "Splitted-By-Country" ]; then
          echo "\nCountry file statistics:"
          for file in Splitted-By-Country/*.txt; do
            if [ -f "$file" ]; then
              count=$(grep -v '^#' "$file" | wc -l)
              size=$(du -h "$file" | cut -f1)
              basename=$(basename "$file")
              echo "  $basename: $count configs ($size)"
            fi
          done
        fi

        if [ -f "Splitted-By-Protocol/unknown.txt" ]; then
          echo "\nUnknown protocol configurations:"
          grep -v '^#' Splitted-By-Protocol/unknown.txt || echo "No unknown protocol configs found"
        fi

        if [ -f "Splitted-By-Country/unknown.txt" ]; then
          echo "\nUnknown country configurations:"
          grep -v '^#' Splitted-By-Country/unknown.txt || echo "No unknown country configs found"
        fi

    - name: Handle large files and prepare for commit
      run: |
        echo "Checking file sizes and handling large files..."

        handle_large_file() {
          local file="$1"
          local prefix="$2"

          if [ -f "$file" ]; then
            size=$(stat -f%z "$file" 2>/dev/null || stat -c%s "$file" 2>/dev/null || echo 0)
            size_mb=$((size / 1024 / 1024))
            echo "File $file size: ${size_mb}MB"

            if [ $size_mb -gt 90 ]; then
              echo "Splitting large file: $file"
              split -b 90M "$file" "${prefix}_part_"
              rm "$file"
              echo "File split into parts with prefix: ${prefix}_part_"
            fi
          fi
        }

        for sub_file in Sub*.txt; do
          if [ -f "$sub_file" ]; then
            filename=$(basename "$sub_file" .txt)
            handle_large_file "$sub_file" "$filename"
          fi
        done

        for base64_file in Base64/Sub*_base64.txt; do
          if [ -f "$base64_file" ]; then
            filename=$(basename "$base64_file" .txt)
            handle_large_file "$base64_file" "Base64/$filename"
          fi
        done

        if [ -d "Splitted-By-Protocol" ]; then
          for protocol_file in Splitted-By-Protocol/*.txt; do
            if [ -f "$protocol_file" ]; then
              filename=$(basename "$protocol_file" .txt)
              handle_large_file "$protocol_file" "Splitted-By-Protocol/${filename}"
            fi
          done
        fi

        if [ -d "Splitted-By-Country" ]; then
          for country_file in Splitted-By-Country/*.txt; do
            if [ -f "$country_file" ]; then
              filename=$(basename "$country_file" .txt)
              handle_large_file "$country_file" "Splitted-By-Country/${filename}"
            fi
          done
        fi

    - name: Clean up temporary files
      run: |
        echo "Cleaning up temporary files..."
        rm -f All_Configs_Sub.txt All_Configs_Sorted.txt All_Configs_base64_Sub.txt

    - name: Commit and push changes
      uses: EndBug/add-and-commit@v9
      with:
        author_name: "GitHub Actions"
        author_email: "github-actions[bot]@users.noreply.github.com"
        message: "üè¥‚Äç‚ò†Ô∏è Fresh Update"
        add: "Base64 Splitted-By-Country Splitted-By-Protocol Sub*.txt"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
